{"remainingRequest":"C:\\VueProject\\project-kim2\\node_modules\\babel-loader\\lib\\index.js!C:\\VueProject\\project-kim2\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\VueProject\\project-kim2\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\VueProject\\project-kim2\\src\\components\\UserEdit.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\VueProject\\project-kim2\\src\\components\\UserEdit.vue","mtime":1549982873933},{"path":"C:\\VueProject\\project-kim2\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1549968815053},{"path":"C:\\VueProject\\project-kim2\\node_modules\\babel-loader\\lib\\index.js","mtime":1549968776091},{"path":"C:\\VueProject\\project-kim2\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1549968815053},{"path":"C:\\VueProject\\project-kim2\\node_modules\\vue-loader\\lib\\index.js","mtime":1549968821818}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//eventBus\nimport { eventBus } from \"../main\"; //main.js 에서 불러옴\n\nexport default {\n  props: [\"nameOfChild\", \"addressOfChild\", \"phoneOfChild\", \"hasDogOfChild\"],\n  data: function data() {\n    return {\n      user: {} //1. 여기서 user 객체를 만들고 \n\n    };\n  },\n  created: function created() {\n    //2. 부모에서 받아온 props 로 다시 user 로 재할당\n    this.user.name = this.nameOfChild;\n    this.user.address = this.addressOfChild;\n    this.user.phone = this.phoneOfChild;\n    this.user.hasDog = this.hasDogOfChild;\n  },\n  methods: {\n    changeUser: function changeUser() {\n      this.$emit(\"child\", this.user); //자식이 부모에게 보내는 신호 $emis 그 신호의 이름을 String 형태로 보내줘야됨\n\n      eventBus.$emit(\"userWasEdited\", new Date());\n    }\n  }\n};",{"version":3,"sources":["UserEdit.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;AAsBA;AACA,SAAA,QAAA,QAAA,SAAA,C,CAAA;;AAEA,eAAA;AACA,EAAA,KAAA,EAAA,CAAA,aAAA,EAAA,gBAAA,EAAA,cAAA,EAAA,eAAA,CADA;AAEA,EAAA,IAFA,kBAEA;AACA,WAAA;AACA,MAAA,IAAA,EAAA,EADA,CACA;;AADA,KAAA;AAGA,GANA;AAOA,EAAA,OAPA,qBAOA;AAAA;AACA,SAAA,IAAA,CAAA,IAAA,GAAA,KAAA,WAAA;AACA,SAAA,IAAA,CAAA,OAAA,GAAA,KAAA,cAAA;AACA,SAAA,IAAA,CAAA,KAAA,GAAA,KAAA,YAAA;AACA,SAAA,IAAA,CAAA,MAAA,GAAA,KAAA,aAAA;AACA,GAZA;AAaA,EAAA,OAAA,EAAA;AACA,IAAA,UADA,wBACA;AACA,WAAA,KAAA,CAAA,OAAA,EAAA,KAAA,IAAA,EADA,CACA;;AACA,MAAA,QAAA,CAAA,KAAA,CAAA,eAAA,EAAA,IAAA,IAAA,EAAA;AACA;AAJA;AAbA,CAAA","sourcesContent":["<template>\r\n  <div class=\"yellow lighten-3 pa-3\">\r\n    <h3>회원 정보를 수정할 수 있습니다.</h3>\r\n    <p>수정사항</p>\r\n    <v-text-field label=\"이름\" v-model=\"user.name\"> <!--v-model 로 값가져옴 /  v-model=\"nameOfChild\" 그리고 받아온 props 에서  html 화면에서 데이터를 수정하면 오류가뜸-->\r\n    </v-text-field>\r\n    <v-text-field label=\"주소\" v-model=\"user.address\">\r\n    </v-text-field>\r\n    <v-text-field label=\"전화번호\" v-model=\"user.phone\">\r\n    </v-text-field>\r\n    <!--true /false 라디오 버튼을 통해-->\r\n    <v-radio-group v-model=\"user.hasDog\">\r\n      <v-radio label=\"반려견 있음\" :value=\"true\" ></v-radio>\r\n      <v-radio label=\"반려견 없음\" :value=\"false\"></v-radio>\r\n    </v-radio-group>\r\n    <v-btn @click=\"changeUser\">수정완료</v-btn>\r\n\r\n  </div>\r\n</template>\r\n<!--자식에서 부모로 보내기 위해 새로운 객체를 만들어서 보냄-->\r\n\r\n<script>\r\n//eventBus\r\nimport { eventBus } from \"../main\"//main.js 에서 불러옴\r\n\r\nexport default {\r\n   props:[\"nameOfChild\",\"addressOfChild\",\"phoneOfChild\",\"hasDogOfChild\"],\r\n    data(){\r\n      return{\r\n        user:{} //1. 여기서 user 객체를 만들고 \r\n      }\r\n    },\r\n    created(){   //2. 부모에서 받아온 props 로 다시 user 로 재할당\r\n      this.user.name=this.nameOfChild\r\n      this.user.address=this.addressOfChild\r\n      this.user.phone=this.phoneOfChild\r\n      this.user.hasDog=this.hasDogOfChild\r\n    },\r\n    methods:{\r\n      changeUser(){\r\n        this.$emit(\"child\",this.user)  //자식이 부모에게 보내는 신호 $emis 그 신호의 이름을 String 형태로 보내줘야됨\r\n        eventBus.$emit(\"userWasEdited\",new Date());\r\n      }\r\n    }\r\n  }\r\n</script>\r\n"],"sourceRoot":"src/components"}]}